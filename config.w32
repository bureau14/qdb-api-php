ARG_WITH("qdb", "QUASARDB support", "no");

if (PHP_QDB != "no") {
    if (FSO.FolderExists(PHP_QDB))
    {
        var incfolder = PHP_QDB + "\\include";
        var libfolder = PHP_QDB + "\\lib";

        if (!CHECK_LIB("qdb_api.lib", "qdb", libfolder)) {
            ERROR("wrong qdb_capi folder: " + PHP_QDB);
        }

        if(!CHECK_HEADER_ADD_INCLUDE("qdb\\client.h", "CFLAGS_QDB", incfolder)) {
            ERROR("wrong qdb_capi folder: " + PHP_QDB);
        }
    }
    else
    {
        if (!CHECK_LIB("qdb_api.lib", "qdb") &&
            !CHECK_LIB("qdb_apid.lib", "qdb") ) {
            ERROR("qdb_api not found, please try --with-qdb=/path/to/qdb_capi");
        }

        if(!CHECK_HEADER_ADD_INCLUDE("qdb\\client.h", "CFLAGS_QDB")) {
            ERROR("qdb\\client.h not found, please try --with-extra-includes=/path/to/include");
        }
    }

    EXTENSION("qdb", "php_qdb.c", true);
    ADD_SOURCES(configure_module_dirname + "\\src", "\
        batch.c \
        batch_operations.c \
        batch_result.c \
        blob.c \
        cluster.c \
        cluster_nodes.c \
        common_params.c \
        exceptions.c \
        globals.c \
        log.c \
        queue.c \
        settings.c \
        ", "qdb");
}
